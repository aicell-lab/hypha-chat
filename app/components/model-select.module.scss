.header {
    display: flex;
    flex-direction: column;
    width: 100%;
    position: relative;
    gap: 20px;
    padding-bottom: 20px;
}

.input-container {
    position: relative;
    width: 100%;
}

input.input[type=text] {
    width: 100%;
    max-width: 100%;
    padding: 0.5rem 0.5rem 0.5rem 2rem;
}

.input-icon {
    position: absolute;
    left: 0.5rem;
    top: 50%;
    transform: translateY(-50%);
    color: #9ca3af;
    width: 1rem;
    height: 1rem;
}

.agent-list-container {
    max-height: 400px;
    overflow-y: auto;
    padding: 0.5rem;
}

.agent-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1rem;
    padding: 0.5rem;
}

.loading-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem 0;
    gap: 0.5rem;
}

.loading-spinner {
    width: 2rem;
    height: 2rem;
    color: var(--primary);
    animation: spin 1s linear infinite;
}

.loading-text {
    color: var(--text-color-2);
    font-size: 0.875rem;
}

.empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem 1rem;
    text-align: center;
}

.empty-icon {
    width: 4rem;
    height: 4rem;
    color: #d1d5db;
    margin-bottom: 1rem;
}

.empty-title {
    font-size: 1.125rem;
    font-weight: 500;
    color: var(--text-color);
    margin-bottom: 0.5rem;
}

.empty-description {
    color: var(--text-color-2);
    max-width: 24rem;
}

.load-more-container {
    display: flex;
    justify-content: center;
    padding: 1rem 0;
}

.load-more-button {
    padding: 0.5rem 1rem;
    background-color: var(--primary);
    color: white;
    border: none;
    border-radius: 0.375rem;
    cursor: pointer;
    transition: background-color 0.2s;

    &:hover {
        background-color: var(--primary-dark);
    }
}

.loading-more {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 0;
    gap: 0.5rem;
}

.loading-more-spinner {
    width: 1.25rem;
    height: 1.25rem;
    color: var(--primary);
    animation: spin 1s linear infinite;
}

.loading-more-text {
    color: var(--text-color-2);
    font-size: 0.875rem;
}

.footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
    margin-top: 1rem;
}

.selection-info {
    font-size: 0.875rem;
    color: var(--text-color-2);
}

.footer-actions {
    display: flex;
    gap: 0.5rem;
}

.cancel-button {
    padding: 0.5rem 1rem;
    color: var(--text-color-2);
    border: 1px solid var(--border-color);
    border-radius: 0.375rem;
    background-color: transparent;
    cursor: pointer;
    transition: background-color 0.2s;

    &:hover {
        background-color: var(--hover-color);
    }
}

.select-button {
    padding: 0.5rem 1rem;
    background-color: var(--primary);
    color: white;
    border: none;
    border-radius: 0.375rem;
    cursor: pointer;
    transition: background-color 0.2s;

    &:hover:not(.disabled) {
        background-color: var(--primary-dark);
    }

    &.disabled {
        background-color: #d1d5db;
        color: #9ca3af;
        cursor: not-allowed;
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.model-list {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    grid-auto-rows: auto;
    align-items: start;
}

.model-family-filter {
    display: flex;
    flex-wrap: wrap;
    gap: .4rem;

    .model-family-button {
        .icon {
            position: relative;
            height: 1rem;
            width: 1rem;

            svg,
            img {
                max-width: 100%;
                max-height: 100%;
                filter: none !important;
            }
        }
    }

    .selected-model-family {
        border-color: var(--primary);
        background-color: var(--second);
    }
}

.model-icon {
    height: 1rem;
    width: 1rem;
    position: relative;

    svg,
    img {
        max-width: 100%;
        max-height: 100%;
        filter: none !important;
    }
}